<features> ::= <convolution> | <convolution> | <pooling> | <dropout>
<convolution> ::= layer:conv1d [num-filters,int,1,32,256] [filter-shape,int,1,2,10] [stride,int,1,1,10] <padding> <activation-function> <bias>
<pooling> ::= <pool-type> [kernel-size,int,1,2,10] [stride,int,1,1,10] <padding>
<pool-type> ::= layer:pool-avg1d | layer:pool-max1d
<padding> ::= padding:same | padding:valid
<dropout> ::= layer:dropout [rate,float,1,0,0.7]
<classification> ::= <fully-connected> | <dropout>
<fully-connected> ::= layer:fc <activation-function> [num-units,int,1,128,9128] <bias> 
<activation-function> ::= act:linear | act:relu | act:sigmoid
<bias> ::= bias:True | bias:False
<output> ::= layer:fc act:linear num-units:256 bias:True
<learning> ::= <gradient-descent> <early-stop> [batch_size,int,1,100,500] epochs:10000 | <rmsprop> <early-stop> [batch_size,int,1,100,500] epochs:10000 | <adam> <early-stop> [batch_size,int,1,100,500] epochs:10000
<gradient-descent> ::= learning:gradient-descent [lr,float,1,0.0001,0.1] [momentum,float,1,0.68,0.99] [decay,float,1,0.000001,0.001] <nesterov>
<nesterov> ::= nesterov:True | nesterov:False
<adam> ::= learning:adam [lr,float,1,0.0001,0.1] [beta1,float,1,0.5,1] [beta2,float,1,0.5,1] [decay,float,1,0.000001,0.001]
<amsgrad> ::= amsgrad:True | amsgrad:False
<rmsprop> ::= learning:rmsprop [lr,float,1,0.0001,0.1] [rho,float,1,0.5,1] [decay,float,1,0.000001,0.001]
<early-stop> ::= [early_stop,int,1,5,20]